package com.sh.mvc.member.model.vo;

/**
 * 열거형(enums)
 * 서로 관련된 상수를 편리하게 선언하기 위한 것, 여러 상수를 정의할 때 사용하면 편함
 * 열거형 상수간의 비교에는 == 사용 가능(equals보다 빠름)
 * 
 */
public enum MemberRole {
	U, A;
	
	/*
	 * 체크드 제약 조건을 열거형으로 관리하면 좋은 이유
	 * 
	 * 1. 안정성, 유효성 검사 : Enums는 컴파일 시점 안전성 보장. checked 제약조건이 걸린 컬럼은
	 * 허락된 값이 아니면 들어오면 안됨. Enums로 정의하면 잘못된 값이 입력되는 것을 방지할 수 있다.
	 * (런타임 오류 방지)
	 * 
	 * 2. 가독성과 유지보수성 : Enums를 사용하면 코드 가독성과 유지보수성 향상
	 * 만약 상수 값이 바뀌면 해당 상수를 참조하는 모든 소스를 다시 컴파일해야 하는데, 열거형을 사용하면
	 * 기존의 소스코드를 다시 컴파일 하지 않아도 됨
	 * 
	 * 3. 데이터베이스 무결성 보장
	 * 
	 * 4. 유연성과 확장성 : 제약 조건이 변경되거나 새 제약 조건을 추가해야 하는 경우 
	 * 데이터베이스 스키마를 수정하지 않고 열거형 클래스를 수정하거나 확장하면 됨
	 * 
	 * 5. 비즈니스 로직과 통합 : 비즈니스 로직과 함께 사용하여 복잡한 제약 조건을 
	 * 적용할 수 있습니다. 예를 들어, 응용 프로그램 도메인과 관련된 추가 규칙에 대해 
	 * 입력 값의 유효성을 검사하는 메소드를 열거형 클래스에 둘 수 있습니다.
	 * */
}
